# Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause-Clear

type vendor_qms, domain;
type vendor_qms_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(vendor_qms)

allow vendor_qms self:capability {
    net_admin
};

allow vendor_qms vendor_qms:{
    netlink_socket
    qipcrtr_socket
    netlink_generic_socket
    netlink_route_socket
}create_socket_perms_no_ioctl;

allow vendor_qms self:udp_socket create_socket_perms;
hal_server_domain_bypass(vendor_qms, vendor_hal_qms_qti)
hal_attribute_service(vendor_hal_qms_qti, vendor_hal_qms_service)
binder_call(vendor_hal_qms_qti_server, servicemanager)
binder_call(vendor_hal_qms_qti_client, vendor_hal_qms_qti_server)
binder_call(vendor_hal_qms_qti_server, vendor_hal_qms_qti_client)
allow vendor_qms self:netlink_route_socket nlmsg_readpriv;

hal_client_domain(vendor_qms,hal_wifi_hostapd)
hal_client_domain(vendor_qms,hal_wifi_supplicant)
hal_client_domain(vendor_qms, hal_bluetooth)


# allow qms to access wpa_socket
allow vendor_qms vendor_wifi_vendor_data_file:dir r_dir_perms;
allow vendor_qms vendor_wifi_vendor_wpa_socket:sock_file write;

#communicating with wpa supplicant for sending commands/listening to events
unix_socket_send(vendor_qms, wpa, hal_wifi_supplicant)
allow vendor_qms wpa_data_file:dir w_dir_perms;
allow vendor_qms wpa_data_file:sock_file create_file_perms;

allow vendor_qms firmware_file:dir r_dir_perms;
allow vendor_qms firmware_file:file r_file_perms;

# Allow vendor_qms to read vendor_soc_model_prop
get_prop(vendor_qms, vendor_soc_model_prop);

#communicating with hostapd for sending commands/listening to events
allow vendor_qms hostapd_data_file:dir rw_dir_perms;
allow vendor_qms hostapd_data_file:sock_file create_file_perms;
allow vendor_qms { hal_wifi_hostapd_default }:unix_dgram_socket sendto;

add_service(vendor_qms, vendor_qms_service)
vndbinder_use(vendor_qms)
allow vendor_qms vendor_qms_service:service_manager find;

wakelock_use(vendor_qms)

# Policies needed for SoS
allow vendor_qms vendor_xtra_service:service_manager find;
binder_call(vendor_qms, vendor_location_xtra_daemon)
qesdk_access(vendor_qms)

#allow QMS to use QTR SDK
qtr_sdk_use(vendor_qms)
allow vendor_qms vendor_qms_vndr_data_file:dir create_dir_perms;
allow vendor_qms vendor_qms_vndr_data_file:file create_file_perms;
get_prop(vendor_qms, vendor_qms_prop)
